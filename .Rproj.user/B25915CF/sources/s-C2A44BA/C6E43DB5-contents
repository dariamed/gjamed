---
title: "JSDM models test"
output:
  html_document:
    toc: true
    toc_float:
      collapsed: false
      smooth_scroll: false
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(arm)
library(jagsUI)
library(ggplot2)
library(gridExtra)
library(parallel)
library(Rcpp)
library(magrittr)
library(purrr)
library(readr)
library(corrplot)
library(gjam)
library(Hmsc)


setwd("~/Desktop/VirtualCommunity/simcoms-master/ExampleFiles")
#setwd("~/Tesi/Code/Ecology-models-master/simcoms-master/ExampleFiles")
lapply(list.files(path = "."),load,.GlobalEnv)
```



## Data 

Data was simulated using VirtualCommunity code.\
Simulated data contains 20 data sets. \
Models : Po
Models were fitted for 2 datasets : \
1.Env5Sp - environmental filetering only for 5 species (asssuming no interactions).\
2.FacDen10Sp - environmental filetering + facilitation for 10 species.\

```{r load_m}
load("model-2019-04-09-19-02-16.rda")
summary(model)
model$Rhat
model$n.eff
model$mcmc.info[1:7]
```

## Test run 
Model for $\textbf{EnvEvenSp5}$


```{r draw, echo=FALSE}
setwd("~/Desktop/VirtualCommunity/simcoms-master/")
#setwd("~/Tesi/Code/Ecology-models-master/simcoms-master/ExampleFiles")

sim_data<-readRDS("sim_data.rds")

#' Extract correlation parameter means
#+ mean-correlations

prob_cooccur_es <- function(Y) {
  K <- ncol(Y)
  ans <- matrix(0, K, K)
  
  for (k in 1:K) {
    for (kk in 1:K) {
      N1 <- sum(Y[, k])
      N2 <- sum(Y[, kk])
      N <- nrow(Y)
      j <- max(0, N1 + N2 - N):min(N1, N2)
      p <- vector("numeric", length(j))
      for (i in seq_along(j)) {
        p[i] <- (
          choose(N, j[i]) * choose(N - j[i], N2 - j[i]) *
            choose(N - N2, N1 - j[i])
        ) / (
          choose(N, N2) * choose(N, N1)
        )
      }  
      ans[k, kk] <- (sum(Y[, k] + Y[, kk] == 2) - sum(p * j)) / N
    }
  }
  ans
}

models<-list(EnvEvenSp5=model)
load("fac_inter.rds")
load("comp_inter.rds")

mean_correlations <- do.call(
  rbind,
  lapply(
    seq_along(models),
    function(i) {
      x <- models[[i]]
      nm <- strsplit(
        names(models)[[i]], "(?<=[a-z])(?=[A-Z])", perl = TRUE
      )[[1]]
      nsp <- ncol(x$mean$Rho)
      ut <- upper.tri(x$mean$Rho)
      sp <- arrayInd(which(ut), c(nsp, nsp))
      ans <- data.frame(
        model = i,
        sp1 = sp[, 1],
        sp2 = sp[, 2],
        rho = c(prob_cooccur_es(x$model$cluster1$data()$Y)[ut], x$mean$Rho[ut]),
        rho_type = rep(c("Effect-Size", "Residual"), each = sum(ut)),
        sgn = sign(x$mean$Rho)[ut],
        significant = x$overlap$Rho[ut],
        #cint = simulation_parameters$comp_inter[[i]][ut],
        #fint = simulation_parameters$fac_inter[[i]][ut],
        cint = comp_inter[[i]][ut],
        fint = fac_inter[[i]][ut],
        density = tail(nm, 2)[1],
        type = paste0(head(nm, -2), collapse = ""),
        nsp = nsp,
        stringsAsFactors = FALSE
      )
      ans$cint[is.na(ans$cint)] <- 0
      ans$fint[is.na(ans$fint)] <- 0
      ans$density[ans$density == "Even"] <- "None"
      ans$density <- factor(ans$density, c("None", "Sparse", "Dense"))
      ans$type[ans$type == "Env"] <- "Environmental\nFiltering Only"
      ans$type[ans$type == "Fac"] <- "Facilitation"
      ans$type[ans$type == "Comp"] <- "Competition"
      ans$type[ans$type == "FacComp"] <- "Facililation +\nCompetition"
      ans$type <- factor(
        ans$type, 
        c(
          "Environmental\nFiltering Only", "Facilitation", "Competition",
          "Facililation +\nCompetition"
        )
      )
      ans$interaction <- "None"
      ans$interaction <- ifelse(ans$cint, "Competition", ans$interaction)
      ans$interaction <- ifelse(ans$fint, "Facilitation", ans$interaction)
      ans$status <- ifelse(
        ans$significant,
        ifelse(ans$sgn * -ans$cint == 1 | ans$sgn * ans$fint == 1, "TP", "FP"),
        ifelse(ans$cint == 0 & ans$fint == 0, "TN", "FN")
      )
      ans$interaction <- factor(
        ans$interaction, c("None", "Facilitation", "Competition")
      )
      ans
    }
  )
)

x <- subset(mean_correlations, type != "Environmental\nFiltering Only")
acc <- by(x, x$model, function(x) sum(x$status == "TP" | x$status == "TN") / nrow(x))

#' Plot correlation parameter means
#+ plot-correlations
ggplot(mean_correlations) +
  aes(factor(nsp), rho, fill = interaction) +
  geom_hline(yintercept = 0) +
  geom_boxplot(
    outlier.size = .2, size = .1, position = position_dodge(preserve = "single")
  ) +
  scale_fill_manual(values = c("grey", "blue", "red")) +
  facet_grid(type ~ rho_type + density, switch = "y") +
  xlab("Number of species") +
  ylab("Correlation") +
  theme_bw() +
  theme(legend.position = "top")

```


## Partial correlation


```{r heat, include=TRUE}
data<-sim_data$EnvEvenSp5
data <- list(
  Y = subset(data, select = -env),
  X = cbind(1, scale(poly(data$env, 2))),
  covx = cov(cbind(1, scale(poly(data$env, 2)))),
  K = 3,
  J = ncol(data) - 1,
  n = nrow(data),
  I = diag(ncol(data) - 1),
  df = ncol(data)
)

Y_cor<-cor(data$Y)
Tau_n<-matrix(nrow=dim(model$mean$Tau)[1], ncol=dim(model$mean$Tau)[1])
for (j in 1:dim(model$mean$Tau)[1]) {
  for (k in 1:dim(model$mean$Tau)[1]){
    Tau_n[j, k] <-  -model$mean$Tau[j, k] / sqrt((model$mean$Tau[j,j]*model$mean$Tau[k,k]))
  }
}

par(mfrow=c(2,2),oma = c(3, 1, 2, 1))
corrplot(Y_cor, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Correlation cor(Y)")
corrplot(model$mean$Rho, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Rho")
corrplot(model$mean$EnvRho, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("EnvRho")
corrplot(Tau_n, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Tau")

```


### GJAM tests
```{r gjam, include=TRUE}
data<-sim_data$EnvEvenSp5

data <- list(
  Y = subset(data, select = -env),
  X = cbind(1, scale(poly(data$env, 2))),
  covx = cov(cbind(1, scale(poly(data$env, 2)))),
  K = 3,
  J = ncol(data) - 1,
  n = nrow(data),
  I = diag(ncol(data) - 1),
  df = ncol(data)
)

#xdata<-as.data.frame(cbind(rep(1,500),test.coms$env))
xdata<-as.data.frame(data$X[,-1])
colnames(xdata)<- c("env","env2")
ydata<-as.data.frame(data$Y)
formula<-as.formula( ~env+ env2)

#rl   <- list(r = 8, N = 20)
ml   <- list(ng = 2500, burnin = 500, typeNames = 'PA')

out3  <- gjam(formula, xdata = xdata, ydata = ydata, modelList = ml)
summary(out3)


par(mfrow=c(1,3),oma = c(1, 1, 1, 1))
corrplot(cor(ydata), diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Correlation cor(Y)")
corrplot(out3$parameters$corMu, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("R")
corrplot(out3$parameters$ematrix, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("E matrix")
#corrplot(Tau_n, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
#title("Tau")



```





### HMSC tests


```{r hmsc, include=TRUE, results=FALSE}
#setwd("~/Desktop/VirtualCommunity/simcoms-master/ExampleFiles")
#setwd("~/Tesi/Code/Ecology-models-master/simcoms-master/ExampleFiles")
#lapply(list.files(path = "."),load,.GlobalEnv)


data<-sim_data$EnvEvenSp5

ns=5
np=500

Y_data = subset(data, select = -env)

X<-scale(poly(data$env[1:np], 2))
colnames(X)<-c("env","env2")

Y_data = subset(data, select = -env)
X<-scale(poly(data$env[1:np], 2))
colnames(X)<-c("env","env2")

#if sim_data is not a sitexspecies matrix but is a dataframe where one column are the presences
# then do this
# Y_data<-matrix(NA,nrow=np,ncol=ns)
# for(i in 1:ns){
#   Y_data[,i]<-as.numeric(sim_data$EnvEvenSp5$present[(np*(i-1)+1):(np*i)])
# }
# 
# X<-scale(poly(data$env[1:np], 2))

studyDesign = data.frame(sample = as.factor(1:np))
rL = HmscRandomLevel(units = studyDesign$sample)
       
m = Hmsc(Y=as.matrix(Y_data), XData=as.data.frame(X), XFormula=~env+env2, distr="probit", 
         studyDesign = studyDesign, ranLevels = list(sample = rL))
nsamples = 1000
nchains=2
m = sampleMcmc(m, nsamples, thin=10, adaptNf=c(200,200), transient=500,nChains=nchains ,verbose=F)





```

Convergence:

```{r hmsc convergence, include=TRUE}

codaList = convertToCodaObject(m)

#convergence histograms
hist(effectiveSize(codaList$Beta), main="ess(beta)")
hist(gelman.diag(codaList$Beta,multivariate=FALSE)$psrf, main="psrf(beta)")


hist(effectiveSize(codaList$Omega[[1]]), main="ess(omega)")
hist(gelman.diag(codaList$Omega[[1]], multivariate=FALSE)$psrf, main="psrf(omega)")

```

Study of interactions

```{r hmsc study of interactions, include=TRUE}

getOmega = function(a,r=1)
  return(crossprod(a$Lambda[[r]]))

postOmega1 = array(unlist(lapply(m$postList[[1]],getOmega)),c(ns,ns,m$samples))
postOmega2 = array(unlist(lapply(m$postList[[2]],getOmega)),c(ns,ns,m$samples))

postOmega<-abind(postOmega1,postOmega2,along=3)
postOmegaMean = apply(postOmega,c(1,2),mean)
postOmegaUp=apply(postOmega,c(1,2),quantile,0.95)
postOmegaLo=apply(postOmega,c(1,2),quantile,0.05)

postR<-array(dim=c(ns,ns,nchains*nsamples))
for(i in 1:dim(postOmega)[3])
 postR[,,i]<-cov2cor(postOmega[,,i])

postRMean = apply(postR,c(1,2),mean)
postRUp=apply(postR,c(1,2),quantile,0.95)
postRLo=apply(postR,c(1,2),quantile,0.05)


Tau = solve(postOmegaMean)
Tau_n = cov2cor(Tau)


Toplot_R<-postRMean*(!(postRUp>0 & postRLo<0))

par(mfrow=c(2,2),oma = c(1, 1, 1, 1))
corrplot(cor(Y_data), diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Correlation cor(Y)")
corrplot(postRMean, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("R")
corrplot(Toplot_R, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Plot only non zero value")
corrplot(Tau_n, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Partial correlation matrix")



```


## Model for 10 species

```{r model2, echo=FALSE}
load("model-2019-04-10-15-13-15.rda")
summary(model)
model$Rhat
model$n.eff
model$mcmc.info[1:7]



models<-list(FacDenseSp10=model)
mean_correlations <- do.call(
  rbind,
  lapply(
    seq_along(models),
    function(i) {
      x <- models[[i]]
      nm <- strsplit(
        names(models)[[i]], "(?<=[a-z])(?=[A-Z])", perl = TRUE
      )[[1]]
      nsp <- ncol(x$mean$Rho)
      ut <- upper.tri(x$mean$Rho)
      sp <- arrayInd(which(ut), c(nsp, nsp))
      ans <- data.frame(
        model = i,
        sp1 = sp[, 1],
        sp2 = sp[, 2],
        rho = c(prob_cooccur_es(x$model$cluster1$data()$Y)[ut], x$mean$Rho[ut]),
        rho_type = rep(c("Effect-Size", "Residual"), each = sum(ut)),
        sgn = sign(x$mean$Rho)[ut],
        significant = x$overlap$Rho[ut],
        #cint = simulation_parameters$comp_inter[[i]][ut],
        #fint = simulation_parameters$fac_inter[[i]][ut],
        cint = comp_inter[[i]][ut],
        fint = fac_inter[[i]][ut],
        density = tail(nm, 2)[1],
        type = paste0(head(nm, -2), collapse = ""),
        nsp = nsp,
        stringsAsFactors = FALSE
      )
      ans$cint[is.na(ans$cint)] <- 0
      ans$fint[is.na(ans$fint)] <- 0
      ans$density[ans$density == "Even"] <- "None"
      ans$density <- factor(ans$density, c("None", "Sparse", "Dense"))
      ans$type[ans$type == "Env"] <- "Environmental\nFiltering Only"
      ans$type[ans$type == "Fac"] <- "Facilitation"
      ans$type[ans$type == "Comp"] <- "Competition"
      ans$type[ans$type == "FacComp"] <- "Facililation +\nCompetition"
      ans$type <- factor(
        ans$type, 
        c(
          "Environmental\nFiltering Only", "Facilitation", "Competition",
          "Facililation +\nCompetition"
        )
      )
      ans$interaction <- "None"
      ans$interaction <- ifelse(ans$cint, "Competition", ans$interaction)
      ans$interaction <- ifelse(ans$fint, "Facilitation", ans$interaction)
      ans$status <- ifelse(
        ans$significant,
        ifelse(ans$sgn * -ans$cint == 1 | ans$sgn * ans$fint == 1, "TP", "FP"),
        ifelse(ans$cint == 0 & ans$fint == 0, "TN", "FN")
      )
      ans$interaction <- factor(
        ans$interaction, c("None", "Facilitation", "Competition")
      )
      ans
    }
  )
)

x <- subset(mean_correlations, type != "Environmental\nFiltering Only")
acc <- by(x, x$model, function(x) sum(x$status == "TP" | x$status == "TN") / nrow(x))

#' Plot correlation parameter means
#+ plot-correlations
ggplot(mean_correlations) +
  aes(factor(nsp), rho, fill = interaction) +
  geom_hline(yintercept = 0) +
  geom_boxplot(
    outlier.size = .2, size = .1, position = position_dodge(preserve = "single")
  ) +
  scale_fill_manual(values = c("grey", "blue", "red")) +
  facet_grid(type ~ rho_type + density, switch = "y") +
  xlab("Number of species") +
  ylab("Correlation") +
  theme_bw() +
  theme(legend.position = "top")


data<-sim_data$FacDenseSp10
data <- list(
  Y = subset(data, select = -env),
  X = cbind(1, scale(poly(data$env, 2))),
  covx = cov(cbind(1, scale(poly(data$env, 2)))),
  K = 3,
  J = ncol(data) - 1,
  n = nrow(data),
  I = diag(ncol(data) - 1),
  df = ncol(data)
)

Y_cor<-cor(data$Y)
Tau_n<-matrix(nrow=dim(model$mean$Tau)[1], ncol=dim(model$mean$Tau)[1])
for (j in 1:dim(model$mean$Tau)[1]) {
  for (k in 1:dim(model$mean$Tau)[1]){
    Tau_n[j, k] <-  -model$mean$Tau[j, k] / sqrt((model$mean$Tau[j,j]*model$mean$Tau[k,k]))
  }
}

par(mfrow=c(2,2))
corrplot(Y_cor, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Correlation cor(Y)")
corrplot(model$mean$EnvRho, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("EnvRho")
corrplot(model$mean$Rho, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Rho")
corrplot(Tau_n, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Tau")



# HMSC

data<-sim_data$FacDenseSp10

Y_data = subset(data, select = -env)
X<-scale(poly(data$env[1:np], 2))
colnames(X)<-c("env","env2")

#if sim_data is not a sitexspecies matrix but is a dataframe where one column are the presences
# then do this
 # Y_data<-matrix(NA,nrow=np,ncol=ns)
 # for(i in 1:ns){
 #   Y_data[,i]<-as.numeric(sim_data$FacDenseSp10$present[(np*(i-1)+1):(np*i)])
 # }
 # 
 # X<-scale(poly(data$env[1:np], 2))




studyDesign = data.frame(sample = as.factor(1:np))
rL = HmscRandomLevel(units = studyDesign$sample)
       
m = Hmsc(Y=as.matrix(Y_data), XData=as.data.frame(X), XFormula=~env+env2, distr="probit", 
         studyDesign = studyDesign, ranLevels = list(sample = rL))

nsamples=1000
nchains=2
m = sampleMcmc(m, nsamples, thin=10, adaptNf=c(200,200), transient=500,nChains=nchains ,verbose=F)

codaList = convertToCodaObject(m)

#convergence histograms
hist(effectiveSize(codaList$Beta), main="ess(beta)")
hist(gelman.diag(codaList$Beta,multivariate=FALSE)$psrf, main="psrf(beta)")
hist(effectiveSize(codaList$Omega[[1]]), main="ess(omega)")
hist(gelman.diag(codaList$Omega[[1]], multivariate=FALSE)$psrf, main="psrf(omega)")



getOmega = function(a,r=1)
  return(crossprod(a$Lambda[[r]]))

postOmega1 = array(unlist(lapply(m$postList[[1]],getOmega)),c(ns,ns,m$samples))
postOmega2 = array(unlist(lapply(m$postList[[2]],getOmega)),c(ns,ns,m$samples))

postOmega<-abind(postOmega1,postOmega2,along=3)
postOmegaMean = apply(postOmega,c(1,2),mean)
postOmegaUp=apply(postOmega,c(1,2),quantile,0.95)
postOmegaLo=apply(postOmega,c(1,2),quantile,0.05)

postR<-array(dim=c(ns,ns,nchains*nsamples))
for(i in 1:dim(postOmega)[3])
 postR[,,i]<-cov2cor(postOmega[,,i])

postRMean = apply(postR,c(1,2),mean)
postRUp=apply(postR,c(1,2),quantile,0.95)
postRLo=apply(postR,c(1,2),quantile,0.05)


Tau = solve(postOmegaMean)
Tau_n = cov2cor(Tau)

#Only values that do not overlap zero
Toplot_R<-postRMean*(!(postRUp>0 & postRLo<0))

par(mfrow=c(2,2),oma = c(1, 1, 1, 1))
corrplot(cor(Y_data), diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Correlation cor(Y)")
corrplot(postRMean, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("R")
corrplot(Toplot_R, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Plot only non zero value")
corrplot(Tau_n, diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("Partial correlation matrix")

```






## Visualization for true interactions

```{r inter_patter_fac, echo=FALSE}
par(mfrow=c(1,3))
corrplot(fac_inter[[4]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacDenseSp5")
corrplot(fac_inter[[5]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacDenseSp10")
corrplot(fac_inter[[6]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacDenseSp20")
mtext("Facilitation Dense", outer = TRUE, cex = 1.5,side=1,line=-1)

par(mfrow=c(1,3))
corrplot(fac_inter[[7]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacSparseSp5")
corrplot(fac_inter[[8]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacSparseSp10")
corrplot(fac_inter[[9]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacSparseSp20")
mtext("Facilitation Sparse", outer = TRUE, cex = 1.5,side=1,line=-1)
```

```{r inter_pattern_comp, echo=FALSE}
par(mfrow=c(1,3))
corrplot(comp_inter[[10]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("CompDenseSp5")
corrplot(comp_inter[[11]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("CompDenseSp10")
corrplot(comp_inter[[12]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("CompDenseSp20")
mtext("Competition Dense", outer = TRUE, cex = 1.5,side=1,line=-1)

par(mfrow=c(1,3))
corrplot(comp_inter[[13]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("CompSparseSp5")
corrplot(comp_inter[[14]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("CompSparseSp10")
corrplot(comp_inter[[15]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("CompSparseSp20")
mtext("Competition Sparse", outer = TRUE, cex = 1.5,side=1,line=-1)


```

```{r inter_pattern_both, echo=FALSE}
par(mfrow=c(1,3))
corrplot(comp_inter[[16]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacCompDenseSp5")
corrplot(comp_inter[[17]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacCompDenseSp10")
corrplot(comp_inter[[18]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacCompDenseSp20")
mtext("Both types Dense", outer = TRUE, cex = 1.5,side=1,line=-1)


par(mfrow=c(1,3))
corrplot(comp_inter[[19]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacCompSparseSp5")
corrplot(comp_inter[[20]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacCompSparseSp10")
corrplot(comp_inter[[21]], diag = FALSE, order = "FPC",tl.pos = "ld", tl.cex = 0.5, method = "color", type = "lower")
title("FacCompSparseSp20")
mtext("Both types Sparse", outer = TRUE, cex = 1.5,side=1,line=-1)

```




