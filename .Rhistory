###########GJAM standart model
y<- train[,7:131]
xdata<- train[,2:3]
formula <- as.formula( ~ bio_1_0 + bio_12_0 + I(bio_1_0^2) + I(bio_12_0^2)  )
Ydata  <- gjamTrimY(y,10)$y             # at least 10 plots - re-group rare species
S<- ncol(Ydata)
rl <- list(r = 20, N = S)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl,holdoutIndex = 1:100) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
formula <- as.formula( ~ bio_1_0 + bio_12_0 )
Ydata  <- gjamTrimY(y,10)$y             # at least 10 plots - re-group rare species
S<- ncol(Ydata)
rl <- list(r = 20, N = S)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl,holdoutIndex = 1:100) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
d <- "https://github.com/jimclarkatduke/gjam/blob/master/forestTraits.RData?raw=True"
source_data(d)
xdata <- forestTraits$xdata[,c(1,2,8)]
xdata
y  <- gjamReZero(forestTraits$treesDeZero)  # extract y
treeYdata  <- gjamTrimY(y,10)$y             # at least 10 plots
form <- as.formula( ~ temp*deficit + I(temp^2) + I(deficit^2) )
S<-ncol(treeYdata) #95
it<-5000
burn<-500
rl <- list(r = 8, N = S,alpha.DP=S)
rl1 <- list(r = 8, N = S, rate=0.1,shape=0.1)
rl2  <- list(r = 8, N = S,rate=0.1,shape=0.1,V=5) #here to modify N
N_eps<-floor(.compute_tau_mean(0.3,10,0.1) + 2*.compute_tau_var(0.3,10,0.1)) #alpha=10,sigma=0.3
rl3   <- list(r = 8, N = N_eps, sigma_py=0.3, alpha=2)
N_eps<-floor(.compute_tau_mean(0.5,10,0.1) + 2*.compute_tau_var(0.5,10,0.1))
rl4   <- list(r = 8, N = N_eps,rate=0.1,shape=0.1,V1=5,ro.disc=0.5) #here to modify N
#ml4   <- list(ng = it, burnin = burn, typeNames = 'DA', reductList = rl4) #change ml
ml4   <- list(ng = it, burnin = burn, typeNames = 'DA', reductList = rl4, holdoutIndex = 1:100)
#ml3   <- list(ng = it, burnin = burn, typeNames = 'DA', reductList = rl3) #change ml
ml3   <- list(ng = it, burnin = burn, typeNames = 'DA', reductList = rl3, holdoutIndex = 1:100)
#ml2   <- list(ng = it, burnin = burn, typeNames = 'DA', reductList = rl2) #change ml
ml2   <- list(ng = it, burnin = burn, typeNames = 'DA', reductList = rl2, holdoutIndex = 1:100)
#ml1   <- list(ng = it, burnin = burn, typeNames = 'DA', reductList = rl1) #change ml
ml1   <- list(ng = it, burnin = burn, typeNames = 'DA', reductList = rl1, holdoutIndex = 1:100)
#ml   <- list(ng = it, burnin = burn, typeNames = 'DA', reductList = rl) #change ml
ml   <- list(ng = it, burnin = burn, typeNames = 'DA', reductList = rl, holdoutIndex = 1:100)
fit<-.gjam0(form, xdata = xdata, ydata = treeYdata, modelList = ml)
fit1<-.gjam_1(form, xdata = xdata, ydata = treeYdata, modelList = ml1)
y<- train[,7:131]
xdata<- train[,2:3]
formula <- as.formula( ~ bio_1_0*bio_12_0  +  I(bio_1_0^2) + I(bio_12_0^2) )
Ydata  <- gjamTrimY(y,10)$y             # at least 10 plots - re-group rare species
S<- ncol(Ydata)
rl <- list(r = 20, N = S)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl,holdoutIndex = 1:100) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
xdata<- train[,2:6]
xdata
cor(xdata)
y<- train[,7:131]
xdata<- train[,2:6]
formula <- as.formula( ~ bio_1_0*bio_8_0  +  I(bio_1_0^2) + I(bio_8_0^2) )
Ydata  <- gjamTrimY(y,10)$y             # at least 10 plots - re-group rare species
S<- ncol(Ydata)
rl <- list(r = 20, N = S)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl,holdoutIndex = 1:100) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
y<- train[,7:131]
xdata<- train[,2:6]
formula <- as.formula( ~ bio_1_0*slope +  I(bio_1_0^2) + I(slope^2) )
Ydata  <- gjamTrimY(y,10)$y             # at least 10 plots - re-group rare species
S<- ncol(Ydata)
rl <- list(r = 20, N = S)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl,holdoutIndex = 1:100) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
y<- train[,7:131]
xdata<- train[,2:6]
formula <- as.formula( ~ bio_1_0+ slope)
Ydata  <- gjamTrimY(y,10)$y             # at least 10 plots - re-group rare species
S<- ncol(Ydata)
rl <- list(r = 20, N = S)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl,holdoutIndex = 1:100) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
n=955
holdoutIndex<- 1:100
.gjamHoldoutSetup <- function(holdoutIndex,holdoutN,n){
#holdout samples
if(length(holdoutIndex) > 0)holdoutN <- length(holdoutIndex)
if(holdoutN > (n/5))stop('too many holdouts')
inSamples <- c(1:n)
if(holdoutN > 0){
if(length(holdoutIndex) == 0)holdoutIndex <- sort( sample(n,holdoutN) )
inSamples <- inSamples[-holdoutIndex]
}
nIn <- length(inSamples)
list(holdoutIndex = holdoutIndex, holdoutN = holdoutN,
inSamples = inSamples, nIn = nIn)
}
.gjamHoldoutSetup((holdoutIndex,holdoutN,n)
.gjamHoldoutSetup(holdoutIndex,holdoutN,n)
y_test<- test[,7:131]
xdata_test<- test[,2:6]
new <- list(xdata =xdata_test,  nsim = 1000) # effort unchanged
p1  <- gjamPredict(output = fit, newdata = new)
plot(y_test, p1$sdList$yMu ,ylab = 'Predicted',cex=.1)
abline(0,1)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
rl <- list(r = 5, N = S)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
xdata[1,]
y<- train[,7:131]
xdata<- train[,2:6]
formula <- as.formula( ~ bio_1_0+ bio_19_0+bio_8_0+ slope)
Ydata  <- gjamTrimY(y,10)$y             # at least 10 plots - re-group rare species
S<- ncol(Ydata)
rl <- list(r = 5, N = S)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
rl <- list(r = 5, N = 50)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
dim(PA_non_miss_env)
it<-1000
burn<-500
holdout<- sample(seq_len(nrow(train)), size = 100)
it<-1000
burn<-500
holdout<- sample(seq_len(nrow(train)), size = 100)
###########GJAM standart model
y<- train[,7:131]
xdata<- train[,2:6]
formula <- as.formula( ~ bio_1_0+ bio_19_0+bio_8_0+ slope)
Ydata  <- gjamTrimY(y,10)$y             # at least 10 plots - re-group rare species
S<- ncol(Ydata)
rl <- list(r = 5, N = 50)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl, holdoutIndex=holdout) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
y_test<- test[,7:131]
xdata_test<- test[,2:6]
new <- list(xdata =xdata_test,  nsim = 1000) # effort unchanged
p1  <- gjamPredict(output = fit, newdata = new)
plot(y_test, p1$sdList$yMu ,ylab = 'Predicted',cex=.1)
ml   <- list(ng = 100, burnin = 10, typeNames = 'PA', reductList = rl, holdoutIndex=holdout) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
ml   <- list(ng = 100, burnin = 10, typeNames = 'PA', reductList = rl) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
ml   <- list(ng = 100, burnin = 10, typeNames = 'PA', reductList = rl) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
Ydata  <- gjamTrimY(y,50)$y             # at least 10 plots - re-group rare species
S<- ncol(Ydata)
rl <- list(r = 5, N = 50)
ml   <- list(ng = 100, burnin = 10, typeNames = 'PA', reductList = rl) #change ml
fit<-gjam(formula, xdata = xdata, ydata = Ydata, modelList = ml)
y_test<- test[,7:131]
xdata_test<- test[,2:6]
new <- list(xdata =xdata_test,  nsim = 1000) # effort unchanged
p1  <- gjamPredict(output = fit, newdata = new)
p<-ggplot(table, aes(x=x,y=trace,col=as.factor(type)))+geom_point()+
scale_color_manual(name = c(""), values = cols, labels=c("Original model",
#"DP with prior on alpha 1",
"DP with prior on alpha 2","PY with fixed alpha, sigma","PY with prior on alpha, sigma"))+
labs(title="Traceplots of the posterior of the number of clusters")+xlab("iterations")+theme_bw()
#pdf("plot_forest_data/forest_data_trace_K.pdf")
p
p<-ggplot(table, aes(x=x,y=trace,col=as.factor(type)))+geom_point()+
scale_color_manual(name = c(""), values = cols, labels=c("Original model",
#"DP with prior on alpha 1",
"DP with prior on alpha 2","PY with fixed alpha, sigma","PY with prior on alpha, sigma"))+
labs(title="Traceplots of the posterior of the number of clusters")+xlab("iterations")+theme_bw()
xdata[1:10,]
cor(xdata)
prcomp(xdata)
x<- prcomp(xdata)
x
plot(x$sdev)
rm(list=ls())
setwd("~/GitHub/gjamed")
library(repmis)
library(gjam)
library(MASS)
library(truncnorm)
library(coda)
library(RcppArmadillo)
library(ggmcmc)
library(arm)
library(coda)
library(Rcpp)
library(ggplot2)
library(biomod2)
Rcpp::sourceCpp('src/cppFns.cpp')
source("R/gjamHfunctions_mod.R")
source("R/simple_gjam_0.R")
source("R/simple_gjam_1.R")
source("R/simple_gjam_2.R")
source("R/simple_gjam_3.R")
source("R/simple_gjam_4.R")
#rm(list=ls())
library(repmis)
library(gjam)
library(MASS)
library(truncnorm)
library(coda)
library(RcppArmadillo)
library(arm)
library(Rcpp)
library(raster)
library(ggplot2)
library(rgdal)
library(biomod2)
Rcpp::sourceCpp('src/cppFns.cpp')
source("R/gjamHfunctions_mod.R")
source("R/simple_gjam_1.R")
source("R/simple_gjam_2.R")
source("R/simple_gjam_3.R")
source("R/simple_gjam_4.R")
#rm(list=ls())
library(repmis)
library(gjam)
library(MASS)
library(truncnorm)
library(coda)
library(RcppArmadillo)
library(arm)
library(Rcpp)
library(raster)
library(ggplot2)
library(rgdal)
library(biomod2)
Rcpp::sourceCpp('src/cppFns.cpp')
source("R/gjamHfunctions_mod.R")
source("R/simple_gjam_1.R")
source("R/simple_gjam_2.R")
source("R/simple_gjam_3.R")
source("R/simple_gjam_4.R")
load_object <- function(file) {
tmp <- new.env()
load(file = file, envir = tmp)
tmp[[ls(tmp)[1]]]
}
#setwd("~/Downloads/RFate-master/data_supplements/Bauges")
B_coords_xy<- load_object("DB.XY.RData")
#B__observations_XY<- load_object("DB.observations.xy.RData")
#load abundance data
PA_data<-load_object("DOM.mat.sites.species.PA.RData")
PA_data_df<- as.data.frame(PA_data)
PA_data_df$cite<- rownames(PA_data)
spdf <- SpatialPoints(B_coords_xy,proj4string = CRS("+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80
+towgs84=0,0,0,0,0,0,0 +units=m +no_defs"))
#raster stack for the 100.tif
zone.name="ENV_VARIABLES"
zone.env.folder="EOBS_1970_2005"
zone.env.variables=c("bio_1_0","bio_12_0","bio_19_0","bio_8_0","slope")
env.files = list.files(path = paste0(zone.name, "/", zone.env.folder)
, pattern = paste0(paste0(zone.env.variables, ".img", collapse = "|"), "|", paste0(zone.env.variables, ".tif", collapse = "|")), full.names = TRUE)
##function from the package
getSDM_env = function(zone.name, zone.env.folder, zone.env.variables, maskSimul)
{
env.files = list.files(path = paste0(zone.name, "/", zone.env.folder)
, pattern = paste0(paste0(zone.env.variables, ".img", collapse = "|")
, "|"
, paste0(zone.env.variables, ".tif", collapse = "|"))
, full.names = TRUE)
zone.env.stk.CALIB = raster::stack(env.files)
#maskSimul=raster("MASK_100m.tif")
origin(maskSimul) = origin(zone.env.stk.CALIB)
zone.env.stk.PROJ = stack(zone.env.stk.CALIB * maskSimul)
names(zone.env.stk.PROJ) = names(zone.env.stk.CALIB)
return(list(env.CALIB = zone.env.stk.CALIB
, env.PROJ = zone.env.stk.PROJ))
}
new_B_env<-getSDM_env(zone.name, zone.env.folder, zone.env.variables, maskSimul=raster("MASK_100m.tif"))
#B_ENV_proj<- load_object("Bauges.zone.env.stk.PROJ.RData")
B_env_raster<- new_B_env$env.PROJ
B_env<-as.data.frame(extract(B_env_raster, B_coords_xy))
B_env$cite<- rownames(B_coords_xy)
### merge environmental covariates and presence/abscence data by cite.
PA_env_df <- merge(B_env,PA_data_df,by="cite")
## delete cites with NA for environment
NAs_values<- is.na(PA_env_df$bio_1_0)&is.na(PA_env_df$bio_12_0)&is.na(PA_env_df$bio_19_0)&is.na(PA_env_df$bio_8_0)&is.na(PA_env_df$slope)
PA_env_df_1<- PA_env_df[!NAs_values,]
###  delete total 0 for environment
zeros_values<- (PA_env_df_1$bio_1_0==0)&(PA_env_df_1$bio_12_0==0)&(PA_env_df_1$bio_19_0==0)&(PA_env_df_1$bio_8_0==0)&(PA_env_df_1$slope==0)
PA_env_df_2<- PA_env_df_1[!zeros_values,]
## non missing data sets
#PA_non_miss_env<- PA_env_df_2[!apply(is.na(PA_env_df_2[,7:131]),1,any),]
#PA_non_na_env<- PA_env_df_2[!apply(is.na(PA_env_df_2[,7:131]),1,all),]
#### Keeping PA data with at least one 1/0
PA_env_df_3<- PA_env_df_2[which(!(rowSums(is.na(PA_env_df_2[,7:131]))==125)),]
PA_env_df_3<-PA_env_df_3[,]
####Separation test/train
#data<- PA_env_df_3
data<- PA_non_miss_env
smp_size <- floor(0.70 * nrow(data))
## set the seed to make your partition reproducible
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
train <- data[train_ind, ]
test <- data[-train_ind, ]
## dim(train)  / 3712  131
## dim(test)  /  1591  131
########################################################################Group numbers
Species_names_groups<- read.csv("PFG_Bauges_Description_2017.csv", sep="\t")
# K=16 functional groups
#############################################################################Fitting the model
it<-1000
burn<-500
holdout<- sample(seq_len(nrow(train)), size = 100)
###########GJAM standart model
y<- train[,7:131]
xdata<- train[,2:6]
formula <- as.formula( ~ bio_1_0+ bio_19_0+bio_8_0+ slope)
Ydata  <- gjamTrimY(y,10)$y             # at least 10 plots - re-group rare species
S<- ncol(Ydata)
rl <- list(r = 5, N = 50)
ml   <- list(ng = 1000, burnin = 100, typeNames = 'PA', reductList = rl, holdout=holdout) #change ml
####Separation test/train
#data<- PA_env_df_3
data<- PA_env_df_3
smp_size <- floor(0.70 * nrow(data))
## set the seed to make your partition reproducible
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
train <- data[train_ind, ]
test <- data[-train_ind, ]
#### Keeping PA data with at least one 1/0
PA_env_df_3<- PA_env_df_2[which(!(rowSums(is.na(PA_env_df_2[,7:131]))==125)),]
B_env_raster<- new_B_env$env.PROJ
B_env<-as.data.frame(extract(B_env_raster, B_coords_xy))
B_env$cite<- rownames(B_coords_xy)
#rm(list=ls())
library(repmis)
library(gjam)
library(MASS)
library(truncnorm)
library(coda)
library(RcppArmadillo)
library(arm)
library(Rcpp)
library(raster)
library(ggplot2)
library(rgdal)
library(biomod2)
Rcpp::sourceCpp('src/cppFns.cpp')
source("R/gjamHfunctions_mod.R")
source("R/simple_gjam_1.R")
source("R/simple_gjam_2.R")
source("R/simple_gjam_3.R")
source("R/simple_gjam_4.R")
load_object <- function(file) {
tmp <- new.env()
load(file = file, envir = tmp)
tmp[[ls(tmp)[1]]]
}
B_coords_xy<- load_object("DB.XY.RData")
#B__observations_XY<- load_object("DB.observations.xy.RData")
#load abundance data
PA_data<-load_object("DOM.mat.sites.species.PA.RData")
PA_data_df<- as.data.frame(PA_data)
PA_data_df$cite<- rownames(PA_data)
spdf <- SpatialPoints(B_coords_xy,proj4string = CRS("+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80
+towgs84=0,0,0,0,0,0,0 +units=m +no_defs"))
#raster stack for the 100.tif
zone.name="ENV_VARIABLES"
zone.env.folder="EOBS_1970_2005"
zone.env.variables=c("bio_1_0","bio_12_0","bio_19_0","bio_8_0","slope")
env.files = list.files(path = paste0(zone.name, "/", zone.env.folder)
, pattern = paste0(paste0(zone.env.variables, ".img", collapse = "|"), "|", paste0(zone.env.variables, ".tif", collapse = "|")), full.names = TRUE)
getSDM_env = function(zone.name, zone.env.folder, zone.env.variables, maskSimul)
{
env.files = list.files(path = paste0(zone.name, "/", zone.env.folder)
, pattern = paste0(paste0(zone.env.variables, ".img", collapse = "|")
, "|"
, paste0(zone.env.variables, ".tif", collapse = "|"))
, full.names = TRUE)
zone.env.stk.CALIB = raster::stack(env.files)
#maskSimul=raster("MASK_100m.tif")
origin(maskSimul) = origin(zone.env.stk.CALIB)
zone.env.stk.PROJ = stack(zone.env.stk.CALIB * maskSimul)
names(zone.env.stk.PROJ) = names(zone.env.stk.CALIB)
return(list(env.CALIB = zone.env.stk.CALIB
, env.PROJ = zone.env.stk.PROJ))
}
new_B_env<-getSDM_env(zone.name, zone.env.folder, zone.env.variables, maskSimul=raster("MASK_100m.tif"))
#B_ENV_proj<- load_object("Bauges.zone.env.stk.PROJ.RData")
B_env_raster<- new_B_env$env.PROJ
B_env<-as.data.frame(extract(B_env_raster, B_coords_xy))
B_env$cite<- rownames(B_coords_xy)
library(raster)
B_env<-as.data.frame(extract(B_env_raster, B_coords_xy))
B_env$cite<- rownames(B_coords_xy)
B_env<-as.data.frame(extract(B_env_raster, B_coords_xy))
library(repmis)
library(gjam)
library(MASS)
library(truncnorm)
library(coda)
library(RcppArmadillo)
library(arm)
library(Rcpp)
library(raster)
library(ggplot2)
library(rgdal)
library(biomod2)
Rcpp::sourceCpp('src/cppFns.cpp')
source("R/gjamHfunctions_mod.R")
source("R/simple_gjam_1.R")
source("R/simple_gjam_2.R")
source("R/simple_gjam_3.R")
source("R/simple_gjam_4.R")
load_object <- function(file) {
tmp <- new.env()
load(file = file, envir = tmp)
tmp[[ls(tmp)[1]]]
}
#setwd("~/Downloads/RFate-master/data_supplements/Bauges")
B_coords_xy<- load_object("DB.XY.RData")
#B__observations_XY<- load_object("DB.observations.xy.RData")
#load abundance data
PA_data<-load_object("DOM.mat.sites.species.PA.RData")
PA_data_df<- as.data.frame(PA_data)
PA_data_df$cite<- rownames(PA_data)
#raster stack for the 100.tif
zone.name="ENV_VARIABLES"
zone.env.folder="EOBS_1970_2005"
zone.env.variables=c("bio_1_0","bio_12_0","bio_19_0","bio_8_0","slope")
env.files = list.files(path = paste0(zone.name, "/", zone.env.folder)
, pattern = paste0(paste0(zone.env.variables, ".img", collapse = "|"), "|", paste0(zone.env.variables, ".tif", collapse = "|")), full.names = TRUE)
##function from the package
getSDM_env = function(zone.name, zone.env.folder, zone.env.variables, maskSimul)
{
env.files = list.files(path = paste0(zone.name, "/", zone.env.folder)
, pattern = paste0(paste0(zone.env.variables, ".img", collapse = "|")
, "|"
, paste0(zone.env.variables, ".tif", collapse = "|"))
, full.names = TRUE)
zone.env.stk.CALIB = raster::stack(env.files)
#maskSimul=raster("MASK_100m.tif")
origin(maskSimul) = origin(zone.env.stk.CALIB)
zone.env.stk.PROJ = stack(zone.env.stk.CALIB * maskSimul)
names(zone.env.stk.PROJ) = names(zone.env.stk.CALIB)
return(list(env.CALIB = zone.env.stk.CALIB
, env.PROJ = zone.env.stk.PROJ))
}
new_B_env<-getSDM_env(zone.name, zone.env.folder, zone.env.variables, maskSimul=raster("MASK_100m.tif"))
#B_ENV_proj<- load_object("Bauges.zone.env.stk.PROJ.RData")
B_env_raster<- new_B_env$env.PROJ
B_env<-as.data.frame(extract(B_env_raster, B_coords_xy))
B_env$cite<- rownames(B_coords_xy)
library(raster)
library(ggplot2)
library(rgdal)
B_env<-as.data.frame(extract(B_env_raster, B_coords_xy))
B_env$cite<- rownames(B_coords_xy)
rm(list=ls())
library(repmis)
library(gjam)
library(MASS)
library(truncnorm)
library(coda)
library(RcppArmadillo)
library(arm)
library(Rcpp)
library(raster)
library(ggplot2)
library(rgdal)
#library(biomod2)
Rcpp::sourceCpp('src/cppFns.cpp')
source("R/gjamHfunctions_mod.R")
source("R/simple_gjam_1.R")
source("R/simple_gjam_2.R")
source("R/simple_gjam_3.R")
source("R/simple_gjam_4.R")
load_object <- function(file) {
tmp <- new.env()
load(file = file, envir = tmp)
tmp[[ls(tmp)[1]]]
}
#setwd("~/Downloads/RFate-master/data_supplements/Bauges")
B_coords_xy<- load_object("DB.XY.RData")
#B__observations_XY<- load_object("DB.observations.xy.RData")
#load abundance data
PA_data<-load_object("DOM.mat.sites.species.PA.RData")
PA_data_df<- as.data.frame(PA_data)
PA_data_df$cite<- rownames(PA_data)
#raster stack for the 100.tif
zone.name="ENV_VARIABLES"
zone.env.folder="EOBS_1970_2005"
zone.env.variables=c("bio_1_0","bio_12_0","bio_19_0","bio_8_0","slope")
env.files = list.files(path = paste0(zone.name, "/", zone.env.folder)
, pattern = paste0(paste0(zone.env.variables, ".img", collapse = "|"), "|", paste0(zone.env.variables, ".tif", collapse = "|")), full.names = TRUE)
getSDM_env = function(zone.name, zone.env.folder, zone.env.variables, maskSimul)
{
env.files = list.files(path = paste0(zone.name, "/", zone.env.folder)
, pattern = paste0(paste0(zone.env.variables, ".img", collapse = "|")
, "|"
, paste0(zone.env.variables, ".tif", collapse = "|"))
, full.names = TRUE)
zone.env.stk.CALIB = raster::stack(env.files)
#maskSimul=raster("MASK_100m.tif")
origin(maskSimul) = origin(zone.env.stk.CALIB)
zone.env.stk.PROJ = stack(zone.env.stk.CALIB * maskSimul)
names(zone.env.stk.PROJ) = names(zone.env.stk.CALIB)
return(list(env.CALIB = zone.env.stk.CALIB
, env.PROJ = zone.env.stk.PROJ))
}
new_B_env<-getSDM_env(zone.name, zone.env.folder, zone.env.variables, maskSimul=raster("MASK_100m.tif"))
#B_ENV_proj<- load_object("Bauges.zone.env.stk.PROJ.RData")
B_env_raster<- new_B_env$env.PROJ
B_env<-as.data.frame(extract(B_env_raster, B_coords_xy))
B_coords_xy
B_env_raster
extract(B_env_raster, B_coords_xy)
source('~/Documents/GitHub/gjamed/Bagues_run_gjam_old.R')
