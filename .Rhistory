Fin_all[3,2:5]<- Tjur_fin_table
Fin_all[4,1]<- "mean p_N"
Fin_all[4,2:5]<- c(0,GJAM2_pk_last,PY1_pk_last,PY2_pk_last)
Fin_all[5,1]<- "VI dist"
Fin_all[5,2:5]<- VI_D_fin_table
Fin_all[6,1]<- "AR dist"
Fin_all[6,2:5]<- Ar_D_fin_table
Fin_all[7,1]<- "mean K"
Fin_all[7,2:5]<- c(mean(trace0[burn:it]),mean(trace2[burn:it]),mean(trace3[burn:it]),mean(trace4[burn:it]))
Fin_all[,2:5]<- round(Fin_all[,2:5], 3)
write.csv(Fin_all, file = "Fin_10k_pca.csv")
grid.newpage()
grid.table(Fin_all[1:7,1:8])
grid.newpage()
###Sensitivity table
grid.table(fit_19$parameters$sensTable)
grid.newpage()
grid.table(fit2_19$parameters$sensTable)
grid.newpage()
grid.table(fit3_19$parameters$sensTable)
grid.newpage()
grid.table(fit4_19$parameters$sensTable)
grid.newpage()
grid.table(fit_19$inputs$designTable)
grid.newpage()
grid.table(fit2_19$inputs$designTable)
grid.newpage()
grid.table(fit3_19$inputs$designTable)
grid.newpage()
grid.table(fit4_19$inputs$designTable)
grid.newpage()
dev.off()
mean(AUC_PY2)
mean(AUC_PY1)
AUC_GJAM2<-vector()
for(i in 1:ncol(y_test)){
label<- is.na(y_test[,i])
predict<- p2$sdList$yMu[!label,i]
test_value<- y_test[!label,i]
if(sum(test_value)>0){
AUC_GJAM2<-c(AUC_GJAM2,auc(roc(predict,factor(test_value))))
}
}
mean(AUC_GJAM2)
AUC_GJAM<-vector()
for(i in 1:ncol(y_test)){
label<- is.na(y_test[,i])
predict<- p1$sdList$yMu[!label,i]
test_value<- y_test[!label,i]
if(sum(test_value)>0){
AUC_GJAM<-c(AUC_GJAM,auc(roc(predict,factor(test_value))))
}
}
mean(AUC_GJAM)
Tjur_GJAM<-vector()
for(k in 1:ncol(y_test)){
label<- is.na(y_test[,k])
predict<- p1$sdList$yMu[!label,k]
test_value<- y_test[!label,k]
indx <- test_value==1
Tjur_GJAM <- c(Tjur_GJAM,(mean(predict[indx]) - mean(predict[!indx])))
}
mean(na.omit(Tjur_GJAM))
trace<-apply(fit$chains$kgibbs,1,function(x) length(unique(x)))
df<-as.data.frame(trace)
df$iter<-1:it
#plot(apply(fit$chains$kgibbs,1,function(x) length(unique(x))))
p<-ggplot(df, aes(y=trace, x=iter)) + geom_point() +
labs(title=paste0("Trace plot for the number of groups"))+
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
geom_hline(yintercept = 16,color = "red")
p
AUC_GJAM2<-vector()
for(i in 1:ncol(y_test)){
label<- is.na(y_test[,i])
predict<- p2$sdList$yMu[!label,i]
test_value<- y_test[!label,i]
if(sum(test_value)>0){
AUC_GJAM2<-c(AUC_GJAM2,auc(roc(predict,factor(test_value))))
}
}
AUC_GJAM2<-vector()
for(i in 1:ncol(y_test)){
label<- is.na(y_test[,i])
predict<- p2$sdList$yMu[!label,i]
test_value<- y_test[!label,i]
if(sum(test_value)>0){
AUC_GJAM2<-c(AUC_GJAM2,auc(roc(predict,factor(test_value))))
}
}
y_test[1,]
for(i in 1:ncol(y_test)){
print(i)
label<- is.na(y_test[,i])
predict<- p2$sdList$yMu[!label,i]
test_value<- y_test[!label,i]
if(sum(test_value)>0){
AUC_GJAM2<-c(AUC_GJAM2,auc(roc(predict,factor(test_value))))
}
}
i=1
label<- is.na(y_test[,i])
predict<- p2$sdList$yMu[!label,i]
test_value<- y_test[!label,i]
test_value
label
predict
p2  <- gjamPredict(output = fit2_19, newdata = new)
p2
AUC_GJAM2<-vector()
for(i in 1:ncol(y_test)){
label<- is.na(y_test[,i])
predict<- p2$sdList$yMu[!label,i]
test_value<- y_test[!label,i]
if(sum(test_value)>0){
AUC_GJAM2<-c(AUC_GJAM2,auc(roc(predict,factor(test_value))))
}
}
mean(AUC_GJAM2)
Tjur_GJAM2<-vector()
for(k in 1:ncol(y_test)){
label<- is.na(y_test[,k])
predict<- p2$sdList$yMu[!label,k]
test_value<- y_test[!label,k]
indx <- test_value==1
Tjur_GJAM2 <- c(Tjur_GJAM2,(mean(predict[indx]) - mean(predict[!indx])))
}
mean(na.omit(Tjur_GJAM2))
trace<-apply(fit2_19$chains$kgibbs,1,function(x) length(unique(x)))
df<-as.data.frame(trace)
df$iter<-1:it
#plot(apply(fit$chains$kgibbs,1,function(x) length(unique(x))))
p<-ggplot(df, aes(y=trace, x=iter)) + geom_point() +
labs(title=paste0("Trace plot for the number of groups"))+
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
geom_hline(yintercept = 16,color = "red")
p
AUC_PY1<-vector()
for(i in 1:ncol(y_test)){
label<- is.na(y_test[,i])
predict<- p3$sdList$yMu[!label,i]
test_value<- y_test[!label,i]
if(sum(test_value)>0){
AUC_PY1<-c(AUC_PY1,auc(roc(predict,factor(test_value))))
}
}
new <- list(xdata =xdata_test,  nsim = 1000) # effort unchanged
p3  <- gjamPredict(output = fit3_19, newdata = new)
AUC_PY1<-vector()
for(i in 1:ncol(y_test)){
label<- is.na(y_test[,i])
predict<- p3$sdList$yMu[!label,i]
test_value<- y_test[!label,i]
if(sum(test_value)>0){
AUC_PY1<-c(AUC_PY1,auc(roc(predict,factor(test_value))))
}
}
mean(AUC_PY1)
Tjur_PY1<-vector()
for(k in 1:ncol(y_test)){
label<- is.na(y_test[,k])
predict<- p3$sdList$yMu[!label,k]
test_value<- y_test[!label,k]
indx <- test_value==1
Tjur_PY1 <- c(Tjur_PY1,(mean(predict[indx]) - mean(predict[!indx])))
}
mean(na.omit(Tjur_PY1))
trace<-apply(fit3_19$chains$kgibbs,1,function(x) length(unique(x)))
df<-as.data.frame(trace)
df$iter<-1:it
#plot(apply(fit$chains$kgibbs,1,function(x) length(unique(x))))
p<-ggplot(df, aes(y=trace, x=iter)) + geom_point() +
labs(title=paste0("Trace plot for the number of groups"))+
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
geom_hline(yintercept = 16,color = "red")
p
new <- list(xdata =xdata_test,  nsim = 1000) # effort unchanged
p4  <- gjamPredict(output = fit4_19, newdata = new)
AUC_PY2<-vector()
for(i in 1:ncol(y_test)){
label<- is.na(y_test[,i])
predict<- p4$sdList$yMu[!label,i]
test_value<- y_test[!label,i]
if(sum(test_value)>0){
AUC_PY2<-c(AUC_PY2,auc(roc(predict,factor(test_value))))
}
}
mean(AUC_PY2)
Tjur_PY2<-vector()
for(k in 1:ncol(y_test)){
label<- is.na(y_test[,k])
predict<- p1$sdList$yMu[!label,k]
test_value<- y_test[!label,k]
indx <- test_value==1
Tjur_PY2 <- c(Tjur_PY2,(mean(predict[indx]) - mean(predict[!indx])))
}
mean(na.omit(Tjur_PY2))
trace<-apply(fit4_19$chains$kgibbs,1,function(x) length(unique(x)))
df<-as.data.frame(trace)
df$iter<-1:it
#plot(apply(fit$chains$kgibbs,1,function(x) length(unique(x))))
p<-ggplot(df, aes(y=trace, x=iter)) + geom_point() +
labs(title=paste0("Trace plot for the number of groups"))+
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
geom_hline(yintercept = 16,color = "red")
p
AUC_data<- matrix(NA, nrow =length(AUC_GJAM), ncol =4)
AUC_data[,1]<- AUC_GJAM
AUC_data[,2]<- AUC_GJAM2
AUC_data[,3]<- AUC_PY1
AUC_data[,4]<- AUC_PY2
AUC_data_df<- as.data.frame(AUC_data)
names(AUC_data_df)<- c("GJAM","GJAM2","PY1","PY2")
#names(AUC_data_df)<- c("GJAM","GJAM2")
AUC_data_df$species<- colnames(y_test)[1:ncol(y_test)-1]
AUC_fin<- melt(AUC_data_df)
AUC_fin<- merge(AUC_fin,N_occur,by="species")
AUC_fin<- merge(AUC_fin,N_occur2[,c("species","Group2")],by="species")
p2<-ggplot(data=AUC_fin)+geom_boxplot(aes(y=as.numeric(value),x=as.factor(variable),fill=as.factor(variable)))+
scale_y_continuous(name="AUC")+facet_grid(Group ~.,scales = "free")+
scale_fill_discrete(name = "Models", labels = c("GJAM","GJAM2","PY1","PY2"))+xlab("Models")+ theme_bw()
p2
p2<-ggplot(data=AUC_fin)+geom_boxplot(aes(y=as.numeric(value),x=as.factor(variable),fill=as.factor(variable)))+
scale_y_continuous(name="AUC")+
scale_fill_discrete(name = "Models", labels = c("GJAM","GJAM2","PY1","PY2"))+xlab("Models")+ theme_bw()
p2
AUC_fin_table<- as.data.frame(t(apply(AUC_data,2,mean)))
names(AUC_fin_table)<- c("GJAM","GJAM2","PY1","PY2")
#formattable(AUC_fin_table)
# AUC altogether
p<-ggplot(AUC_fin, aes(x=species,y=value,col=as.factor(variable)))+geom_point()+
scale_color_manual(name = c(""), values = cols, labels=c("Original model",
#"DP with prior on alpha 1",
"DP with prior on alpha 2","PY with fixed alpha, sigma","PY with prior on alpha, sigma"))+
labs(title="Traceplots of the posterior of the number of clusters")+xlab("Species")+theme_bw()
#pdf("plot_forest_data/forest_data_trace_K.pdf")
p
Tjur_data<- matrix(NA, nrow =length(Tjur_GJAM), ncol =4)
Tjur_data[,1]<- Tjur_GJAM
Tjur_data[,2]<- Tjur_GJAM2
Tjur_data[,3]<- Tjur_PY1
Tjur_data[,4]<- Tjur_PY2
Tjur_data_df<- as.data.frame(Tjur_data)
names(Tjur_data_df)<- c("GJAM","GJAM2","PY1","PY2")
Tjur_fin<- melt(Tjur_data_df)
p3<-ggplot(data=Tjur_fin)+geom_boxplot(aes(y=as.numeric(value),x=as.factor(variable),fill=as.factor(variable)))+
scale_y_continuous(name="Tjur")+
scale_fill_discrete(name = "Models", labels = c("GJAM","GJAM2","PY1","PY2"))+xlab("Models") + theme_bw()
p3
Tjur_fin_table<- as.data.frame(t(apply(na.omit(Tjur_data),2,mean)))
names(Tjur_fin_table)<- c("GJAM","GJAM2","PY1","PY2")
#formattable(Tjur_fin_table)
########## Alpha plots ##################
pdf("Bauges_data_all_10K_bio19.pdf")
trace<-apply(fit$chains$kgibbs,1,function(x) length(unique(x)))
df<-as.data.frame(trace)
df$iter<-1:it
#plot(apply(fit$chains$kgibbs,1,function(x) length(unique(x))))
p<-ggplot(df, aes(y=trace, x=iter)) + geom_point() +
labs(title=paste0("Trace plot for the number of groups"))+
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
geom_hline(yintercept = 16,color = "red")
p
trace<-apply(fit2_19$chains$kgibbs,1,function(x) length(unique(x)))
df<-as.data.frame(trace)
df$iter<-1:it
#plot(apply(fit$chains$kgibbs,1,function(x) length(unique(x))))
p<-ggplot(df, aes(y=trace, x=iter)) + geom_point() +
labs(title=paste0("Trace plot for the number of groups"))+
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
geom_hline(yintercept = 16,color = "red")
p
trace<-apply(fit3_19$chains$kgibbs,1,function(x) length(unique(x)))
df<-as.data.frame(trace)
df$iter<-1:it
#plot(apply(fit$chains$kgibbs,1,function(x) length(unique(x))))
p<-ggplot(df, aes(y=trace, x=iter)) + geom_point() +
labs(title=paste0("Trace plot for the number of groups"))+
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
geom_hline(yintercept = 16,color = "red")
p
trace<-apply(fit4_19$chains$kgibbs,1,function(x) length(unique(x)))
df<-as.data.frame(trace)
df$iter<-1:it
#plot(apply(fit$chains$kgibbs,1,function(x) length(unique(x))))
p<-ggplot(df, aes(y=trace, x=iter)) + geom_point() +
labs(title=paste0("Trace plot for the number of groups"))+
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
geom_hline(yintercept = 16,color = "red")
p
########
AUC_data<- matrix(NA, nrow =length(AUC_GJAM), ncol =4)
AUC_data[,1]<- AUC_GJAM
AUC_data[,2]<- AUC_GJAM2
AUC_data[,3]<- AUC_PY1
AUC_data[,4]<- AUC_PY2
AUC_data_df<- as.data.frame(AUC_data)
names(AUC_data_df)<- c("GJAM","GJAM2","PY1","PY2")
#names(AUC_data_df)<- c("GJAM","GJAM2")
AUC_data_df$species<- colnames(y_test)[1:ncol(y_test)-1]
AUC_fin<- melt(AUC_data_df)
AUC_fin<- merge(AUC_fin,N_occur,by="species")
AUC_fin<- merge(AUC_fin,N_occur2[,c("species","Group2")],by="species")
p2<-ggplot(data=AUC_fin)+geom_boxplot(aes(y=as.numeric(value),x=as.factor(variable),fill=as.factor(variable)))+
scale_y_continuous(name="AUC")+facet_grid(Group ~.,scales = "free")+
scale_fill_discrete(name = "Models", labels = c("GJAM","GJAM2","PY1","PY2"))+xlab("Models")+ theme_bw()
p2
p2<-ggplot(data=AUC_fin)+geom_boxplot(aes(y=as.numeric(value),x=as.factor(variable),fill=as.factor(variable)))+
scale_y_continuous(name="AUC")+
scale_fill_discrete(name = "Models", labels = c("GJAM","GJAM2","PY1","PY2"))+xlab("Models")+ theme_bw()
p2
AUC_fin_table<- as.data.frame(t(apply(AUC_data,2,mean)))
names(AUC_fin_table)<- c("GJAM","GJAM2","PY1","PY2")
#formattable(AUC_fin_table)
# AUC altogether
p<-ggplot(AUC_fin, aes(x=species,y=value,col=as.factor(variable)))+geom_point()+
scale_color_manual(name = c(""), values = cols, labels=c("Original model",
#"DP with prior on alpha 1",
"DP with prior on alpha 2","PY with fixed alpha, sigma","PY with prior on alpha, sigma"))+
labs(title="Traceplots of the posterior of the number of clusters")+xlab("Species")+theme_bw()
#pdf("plot_forest_data/forest_data_trace_K.pdf")
p
#dev.off()
Tjur_data<- matrix(NA, nrow =length(Tjur_GJAM), ncol =4)
Tjur_data[,1]<- Tjur_GJAM
Tjur_data[,2]<- Tjur_GJAM2
Tjur_data[,3]<- Tjur_PY1
Tjur_data[,4]<- Tjur_PY2
Tjur_data_df<- as.data.frame(Tjur_data)
names(Tjur_data_df)<- c("GJAM","GJAM2","PY1","PY2")
Tjur_fin<- melt(Tjur_data_df)
p3<-ggplot(data=Tjur_fin)+geom_boxplot(aes(y=as.numeric(value),x=as.factor(variable),fill=as.factor(variable)))+
scale_y_continuous(name="Tjur")+
scale_fill_discrete(name = "Models", labels = c("GJAM","GJAM2","PY1","PY2"))+xlab("Models") + theme_bw()
p3
df_alpha <- data.frame(matrix(NA, nrow =it-burn, ncol =1))
df_alpha$alpha<-fit2_19$chains$alpha.DP_g[(burn+1):it]
df_alpha$type<- "posterior"
#df_alpha_prior <- data.frame(matrix(NA, nrow =it-burn, ncol =1))
#df_alpha_prior$alpha<- rgamma(it-burn, shape, rate)
#alpha_seq= seq(min(alpha.chains[-c(1:burn)]),max(alpha.chains[-c(1:burn)]),length=it-burn)
#df_alpha_prior$alpha <- dgamma(alpha_seq,rate,shape)
#df_alpha_prior$type<- "prior"
#df_alpha_all<- rbind(df_alpha[-1,],df_alpha_prior[-1,])
###Compute mean
mu <- ddply(df_alpha, "type", summarise, grp.mean=mean(alpha))
mu1<- as.data.frame(alpha.DP)
colnames(mu1)<- c("grp.mean")
mu1$type<- "prior"
mu<- rbind(mu, mu1)
#pdf("Posterior_density_alphaT2.pdf")
p_alpha_2<- ggplot(df_alpha, aes(x=alpha)) + geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")+
geom_density(color="red",adjust = 2)+labs(title=paste0("Posterior distribution for alpha")) +
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = c("Legend"), values = c("prior"="#9999FF", "posterior"= "#FF6666"), labels=c("posterior mean","prior mean"))
p_alpha_2
#dev.off()
df_alpha <- data.frame(matrix(NA, nrow =it-burn, ncol =1))
df_alpha$alpha<- fit4_19$chains$alpha.PY_g[(burn+1):it]
df_alpha$type<- "posterior"
#df_alpha_prior <- data.frame(matrix(NA, nrow =it-burn, ncol =1))
#df_alpha_prior$alpha<- rgamma(it-burn, shape, rate)
#alpha_seq= seq(min(alpha.chains[-c(1:burn)]),max(alpha.chains[-c(1:burn)]),length=it-burn)
#df_alpha_prior$alpha <- dgamma(alpha_seq,rate,shape)
#df_alpha_prior$type<- "prior"
#df_alpha_all<- rbind(df_alpha[-1,],df_alpha_prior[-1,])
###Compute mean
mu <- ddply(df_alpha, "type", summarise, grp.mean=mean(alpha))
mu1<-as.data.frame(alpha.DP)
colnames(mu1)<- c("grp.mean")
mu1$type<- "prior"
mu<- rbind(mu, mu1)
#pdf("Posterior_density_alphaT1.pdf")
p_alpha_2<- ggplot(df_alpha, aes(x=alpha)) + geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")+
geom_density(color="red",adjust = 3)+labs(title=paste0("Posterior distribution for alpha")) +
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = c("Legend"), values = c("prior"="#9999FF", "posterior"= "#FF6666"), labels=c("posterior mean","prior mean"))
p_alpha_2
#dev.off()
df_sigma <- data.frame(matrix(NA, nrow =it-burn, ncol =1))
df_sigma$sigma<- fit4_19$chains$discount.PY_g[(burn+1):it]
df_sigma$type<- "posterior"
mu <- ddply(df_sigma, "type", summarise, grp.mean=mean(sigma))
mu1<-as.data.frame(sigma_py)
colnames(mu1)<- c("grp.mean")
mu1$type<- "prior"
mu<- rbind(mu, mu1)
#pdf("Posterior_density_alphaT1.pdf")
p_alpha_2<- ggplot(df_sigma, aes(x=sigma)) + geom_vline(data=mu, aes(xintercept=grp.mean, color=type),linetype="dashed")+
geom_density(color="red",adjust = 1.2)+labs(title=paste0("Posterior distribution for sigma")) +
theme_bw() + theme(axis.text.x = element_text(angle = 0, hjust = 1,size = 10), strip.text = element_text(size = 15),legend.position = "top", plot.title = element_text(hjust = 0.5))+
scale_color_manual(name = c("Legend"), values = c("prior"="#9999FF", "posterior"= "#FF6666"), labels=c("posterior mean","prior mean"))
p_alpha_2
#dev.off()
alpha<-mcmc(fit2_19$chains$alpha.DP_g)
#alpha<-mcmc(fit3$chains$alpha.PY_g[seq(1,length(fit3$chains$alpha.PY_g),by=20)])
plot(alpha,main="alpha DP")
acfplot(alpha)
cumuplot(alpha)
##gjam4
alpha<-mcmc(fit4_19$chains$alpha.PY_g)
#alpha<-mcmc(fit4$chains$alpha.PY_g[seq(1,length(fit4$chains$alpha.PY_g),by=20)])
plot(alpha,main="alpha PY")
acfplot(alpha)
cumuplot(alpha)
discount<-mcmc(fit4_19$chains$discount.PY_g)
plot(discount,main="discount PY")
acfplot(discount)
cumuplot(discount)
#check the traceplots of K
trace0<-apply(fit_19$chains$kgibbs,1,function(x) length(unique(x)))
#trace1<-apply(fit1$chains$kgibbs,1,function(x) length(unique(x)))
trace2<-apply(fit2_19$chains$kgibbs,1,function(x) length(unique(x)))
trace3<-apply(fit3_19$chains$kgibbs,1,function(x) length(unique(x)))
trace4<-apply(fit4_19$chains$kgibbs,1,function(x) length(unique(x)))
table<-data.frame()
table<-data.frame("trace"=c(trace0,
#trace1,
trace2,trace3,trace4),
"type"=c(rep("0",length(trace0)),
#rep("1",length(trace1)),
rep("2",length(trace2)),rep("3",length(trace3)),rep("4",length(trace4))),
"x"=rep(1:it,4))
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
cols = gg_color_hue(4)
#pdf("Bauges_data_all_trace_pca.pdf")
p<-ggplot(table, aes(x=x,y=trace,col=as.factor(type)))+geom_point()+
scale_color_manual(name = c(""), values = cols, labels=c("Original model",
#"DP with prior on alpha 1",
"DP with prior on alpha 2","PY with fixed alpha, sigma","PY with prior on alpha, sigma"))+
labs(title="Traceplots of the posterior of the number of clusters")+xlab("iterations")+ylab("Number of clusters") +theme_bw()+geom_hline(yintercept = 16,color = "red")
#pdf("plot_forest_data/forest_data_trace_K.pdf")
p
#dev.off()
# Final matrix
form<-c(formula)
Fin_all<-as.data.frame(matrix(NA,nrow=10,ncol=9))
names(Fin_all)<- c("Parameter","GJAM","GJAM2","PY1","PY2","r", "iter", "burn","formula")
Fin_all$iter<- it
Fin_all$burn<- burn
Fin_all$r<-5
Fin_all$formula<-as.character(form)
Fin_all[1,1]<- "DIC"
Fin_all[1,2:5]<- c(fit$fit$DIC,fit2$fit$DIC,fit3$fit$DIC,fit4$fit$DIC)/100000
Fin_all[2,1]<- "mean AUC"
Fin_all[2,2:5]<- AUC_fin_table
Fin_all[3,1]<- "mean Tjur"
Fin_all[3,2:5]<- Tjur_fin_table
Fin_all[4,1]<- "mean p_N"
Fin_all[4,2:5]<- c(0,GJAM2_pk_last,PY1_pk_last,PY2_pk_last)
Fin_all[5,1]<- "VI dist"
Fin_all[5,2:5]<- VI_D_fin_table
Fin_all[6,1]<- "AR dist"
Fin_all[6,2:5]<- Ar_D_fin_table
Fin_all[7,1]<- "mean K"
Fin_all[7,2:5]<- c(mean(trace0[burn:it]),mean(trace2[burn:it]),mean(trace3[burn:it]),mean(trace4[burn:it]))
Fin_all[,2:5]<- round(Fin_all[,2:5], 3)
write.csv(Fin_all, file = "Fin_10k_pca.csv")
grid.newpage()
grid.table(Fin_all[1:7,1:8])
grid.newpage()
###Sensitivity table
grid.table(fit_19$parameters$sensTable)
grid.newpage()
grid.table(fit2_19$parameters$sensTable)
grid.newpage()
grid.table(fit3_19$parameters$sensTable)
grid.newpage()
grid.table(fit4_19$parameters$sensTable)
grid.newpage()
grid.table(fit_19$inputs$designTable)
grid.newpage()
grid.table(fit2_19$inputs$designTable)
grid.newpage()
grid.table(fit3_19$inputs$designTable)
grid.newpage()
grid.table(fit4_19$inputs$designTable)
grid.newpage()
dev.off()
save(train, file = "sample_data_train_19.Rds")
save(test, file = "sample_data_test_19.Rds")
save(y, file = "sample_y_19.Rds")
save(fit4,file="models_Bagues_data_OSS/fit4_19.Rda")
d <- "https://github.com/jimclarkatduke/gjam/blob/master/forestTraits.RData?raw=True"
source_data(d)
xdata <- forestTraits$xdata[,c(1,2,8)]
formula <- as.formula( ~ temp*deficit + I(temp^2) + I(deficit^2) )
y  <- gjamReZero(forestTraits$treesDeZero)  # extract y
treeYdata  <- gjamTrimY(y,10)$y             # at least 10 plots
rl <- list(r = 8, N = 20)
ml   <- list(ng = 1000, burnin = 500, typeNames = 'DA', reductList = rl) #change ml
form <- as.formula( ~ temp*deficit + I(temp^2) + I(deficit^2) )
fit<-gjam(form, xdata = xdata, ydata = treeYdata, modelList = ml)
set.seed(123)
fit2$modelList$formula
load_object <- function(file) {
tmp <- new.env()
load(file = file, envir = tmp)
tmp[[ls(tmp)[1]]]
}
alpha<-mcmc(fit4_19$chains$alpha.PY_g)
#alpha<-mcmc(fit4$chains$alpha.PY_g[seq(1,length(fit4$chains$alpha.PY_g),by=20)])
plot(alpha,main="alpha PY")
alpha<-mcmc(fit4$chains$alpha.PY_g[seq(1,length(fit4$chains$alpha.PY_g),by=20)])
plot(alpha,main="alpha PY")
alpha<-mcmc(fit4$chains$alpha.PY_g[seq(1,length(fit4$chains$alpha.PY_g),by=5)])
plot(alpha,main="alpha PY")
acfplot(alpha)
cumuplot(alpha)
